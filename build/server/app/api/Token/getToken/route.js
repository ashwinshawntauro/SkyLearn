"use strict";(()=>{var e={};e.id=3088,e.ids=[3088],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},85156:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>k});var n={};t.r(n),t.d(n,{GET:()=>c});var o=t(73278),s=t(45002),a=t(54877),i=t(53524),u=t(71309);let p=new i.PrismaClient;async function c(e){let{searchParams:r}=new URL(e.url),t=r.get("courseId"),n=r.get("livestreamId");try{let e=await p.user_tokens.count({where:{course_id:parseInt(t),livestream_id:parseInt(n)}});return u.NextResponse.json({count:e},{status:200})}catch(e){return console.error("Error fetching token count:",e),u.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/Token/getToken/route",pathname:"/api/Token/getToken",filename:"route",bundlePath:"app/api/Token/getToken/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\Token\\getToken\\route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:k,serverHooks:g}=d,m="/api/Token/getToken/route";function v(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:k})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[9379,4833],()=>t(85156));module.exports=n})();