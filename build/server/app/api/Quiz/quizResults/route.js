"use strict";(()=>{var e={};e.id=4946,e.ids=[4946],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},96246:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>q,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>R});var s={};t.r(s),t.d(s,{POST:()=>p});var u=t(73278),i=t(45002),a=t(54877),n=t(53524),o=t(71309);let l=new n.PrismaClient;async function p(e){try{let{user_id:r,course_id:t,total_score:s,is_passed:u}=await e.json();if(!r||!t||null==s||null==u)return o.NextResponse.json({error:"Missing required fields"},{status:400});let i=await l.qUIZ_RESULTS.create({data:{user_id:r,course_id:t,total_score:s,is_passed:u}});return await l.lEADERBOARD.create({data:{student_id:r,course_id:t,rank:null,score:s}}),o.NextResponse.json({message:"Quiz result added successfully",result:i})}catch(e){if(console.error("Error inserting quiz result:",e),"P2002"===e.code)return o.NextResponse.json({error:"Quiz already attempted for this course"},{status:409});return o.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new u.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/Quiz/quizResults/route",pathname:"/api/Quiz/quizResults",filename:"route",bundlePath:"app/api/Quiz/quizResults/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\Quiz\\quizResults\\route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:R,serverHooks:m}=d,x="/api/Quiz/quizResults/route";function q(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:R})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9379,4833],()=>t(96246));module.exports=s})();