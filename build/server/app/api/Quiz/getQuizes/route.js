"use strict";(()=>{var e={};e.id=8780,e.ids=[8780],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},74873:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>c});var o=t(73278),i=t(45002),n=t(54877),u=t(53524),a=t(71309);let p=new u.PrismaClient;async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("courseId");if(!t)return a.NextResponse.json({error:"Missing parameter: courseId"},{status:400});let s=parseInt(t,10);if(isNaN(s))return a.NextResponse.json({error:"Invalid courseId parameter"},{status:400});let o=await p.qUIZ.findMany({where:{course_id:s},select:{question_id:!0,question_number:!0,question_text:!0,choice_1:!0,choice_2:!0,choice_3:!0,choice_4:!0,correct_choice:!0}});if(0===o.length)return a.NextResponse.json({error:"No questions found for this course"},{status:404});return a.NextResponse.json(o)}catch(e){return console.error("Error fetching questions:",e),a.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/Quiz/getQuizes/route",pathname:"/api/Quiz/getQuizes",filename:"route",bundlePath:"app/api/Quiz/getQuizes/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\Quiz\\getQuizes\\route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:g}=d,x="/api/Quiz/getQuizes/route";function m(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9379,4833],()=>t(74873));module.exports=s})();