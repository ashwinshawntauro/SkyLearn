"use strict";(()=>{var e={};e.id=8960,e.ids=[8960],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},85842:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var a={};t.r(a),t.d(a,{PUT:()=>p});var s=t(73278),n=t(45002),d=t(54877),o=t(53524),i=t(71309);let u=new o.PrismaClient;async function p(e){let{studentId:r,courseId:t,Score:a}=await e.json();if(!t||!r)return i.NextResponse.json({message:"Invalid courseId or studentId"},{status:400});try{let e=await u.lEADERBOARD.findUnique({where:{course_id_student_id:{course_id:parseInt(t),student_id:parseInt(r)}},select:{marksStatus:!0}});if(e&&"Graded"===e.marksStatus)return i.NextResponse.json({message:"This assignment is already graded."},{status:400});let s=await u.lEADERBOARD.update({where:{course_id_student_id:{course_id:parseInt(t),student_id:parseInt(r)}},data:{score:{increment:parseInt(a)||0},marksStatus:"Graded"}});return i.NextResponse.json(s)}catch(e){return console.error("Error updating course with classroom details:",e),i.NextResponse.json({message:"Internal Server Error"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/updateLeaderboard/route",pathname:"/api/updateLeaderboard",filename:"route",bundlePath:"app/api/updateLeaderboard/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\updateLeaderboard\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:x}=c,g="/api/updateLeaderboard/route";function h(){return(0,d.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[9379,4833],()=>t(85842));module.exports=a})();