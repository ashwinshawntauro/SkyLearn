"use strict";(()=>{var e={};e.id=7908,e.ids=[7908],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},37310:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>E,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var n={};t.r(n),t.d(n,{GET:()=>u});var s=t(73278),o=t(45002),a=t(54877),i=t(71309);let l=new(t(53524)).PrismaClient;async function u(e){try{let{searchParams:r}=new URL(e.url),t=r.get("student_id");if(!t)return i.NextResponse.json({error:"student_id is required"},{status:400});let n=await l.eNROLLMENT.findMany({where:{student_id:parseInt(t,10)},select:{student_id:!0,course_id:!0}});return i.NextResponse.json({getEnroll:n},{status:200})}catch(e){return console.error(e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/Enrollments/getEnroll/route",pathname:"/api/Enrollments/getEnroll",filename:"route",bundlePath:"app/api/Enrollments/getEnroll/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\Enrollments\\getEnroll\\route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:m}=p,E="/api/Enrollments/getEnroll/route";function g(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[9379,4833],()=>t(37310));module.exports=n})();