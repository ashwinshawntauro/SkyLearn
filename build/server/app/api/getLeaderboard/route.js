"use strict";(()=>{var e={};e.id=2449,e.ids=[2449],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},51042:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>l});var a={};t.r(a),t.d(a,{GET:()=>d});var s=t(73278),o=t(45002),n=t(54877),i=t(71309);let u=new(t(53524)).PrismaClient;async function d(e){try{let{searchParams:r}=new URL(e.url),t=r.get("course_id");if(!t)return i.NextResponse.json({error:"course_id is required"},{status:400});let a=await u.lEADERBOARD.findMany({where:{course_id:parseInt(t,10)},orderBy:{score:"desc"},include:{STUDENT:{select:{student_name:!0}}}});return i.NextResponse.json({leaderboardInfo:a},{status:200})}catch(e){return console.error(e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/getLeaderboard/route",pathname:"/api/getLeaderboard",filename:"route",bundlePath:"app/api/getLeaderboard/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\getLeaderboard\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:g}=p,m="/api/getLeaderboard/route";function x(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:l})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[9379,4833],()=>t(51042));module.exports=a})();