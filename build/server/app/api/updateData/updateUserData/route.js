"use strict";(()=>{var e={};e.id=4623,e.ids=[4623],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},51500:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>D,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{PUT:()=>d});var s=r(73278),n=r(45002),u=r(54877),o=r(53524),p=r(71309);let i=new o.PrismaClient;async function d(e){try{let{newUserName:t,newAdd:r,userId:a}=await e.json();if(!t||!r||!a)return p.NextResponse.json({error:"Missing required fields"},{status:400});let s=await i.sTUDENT.update({where:{student_id:a},data:{student_name:t,address:r}});return p.NextResponse.json(s)}catch(e){return console.error("Error updating user:",e),p.NextResponse.json({error:"Internal Server Error"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/updateData/updateUserData/route",pathname:"/api/updateData/updateUserData",filename:"route",bundlePath:"app/api/updateData/updateUserData/route"},resolvedPagePath:"D:\\skylearn\\src\\app\\api\\updateData\\updateUserData\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:x}=l,D="/api/updateData/updateUserData/route";function h(){return(0,u.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9379,4833],()=>r(51500));module.exports=a})();